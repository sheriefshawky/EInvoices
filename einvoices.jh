


entity DocumentType{
    name String,
    description String,
    activeFrom Instant,
    activeTo Instant,
}

entity DocumentTypeVersion{
    name String,
    description String,
    versionNumber BigDecimal,
    status String,
    activeFrom Instant,
    activeTo Instant
}

entity WorkflowParameters{
	parameter String,
    value Long,
    activeFrom Instatnt,
    activeTo Instant
}


entity Document{
	documentType String,
    documentTypeVersion String,
    dateTimeIssued Instant,
    taxpayerActivityCode String,
    internalId String,
    purchaseOrderReference String,
    purchaseOrderDescription String,
    salesOrderReference String,
    salesOrderDescription String,
    proformaInvoiceNumber String,
    totalSalesAmount BigDecimal,
    totalDiscountAmount BigDecimal,
    netAmount BigDecimal,
    extraDiscountAmount BigDecimal,
    totalItemsDiscountAmount BigDecimal,
    totalAmount BigDecimal
}

entity Issuer{
	type String,
    name String
}

entity IssuerAddress{
	branchId String,
    country String,
    governate String,
    regionCity String,
    street String,
    buildingNumber String,
    postalCode String,
    floor String,
    room String,
    landmark String,
    additionalInformation String
}

entity Receiver{
	type String,
    name String
}

entity ReceiverAddress{
	country String,
    governate String,
    regionCity String,
    street String,
    buildingNumber String,
    postalCode String,
    floor String,
    room String,
	landmark String,
    additionalInformation String
}

entity Payment{
	bankName String,
    bankAddress String,
    bankAccountNo String,
    bankAccountIBAN String,
    swiftCode String,
    terms String
}

entity Delivery{
	approach String,
    packaging String,
    dateValidity String,
    exportPort String,
    countryOfOrigin String,
    grossWeight String,
    netWeight BigDecimal,
    terms String
}

entity InvoiceLine{
	description String,
    itemType String,
    itemCode String,
    unitType String,
    quantity BigDecimal,
    salesTotal BigDecimal,
    total BigDecimal,
    valueDifference BigDecimal,
    totalTaxableFees BigDecimal,
    netTotal BigDecimal,
    itemsDiscount BigDecimal,
    internalCode String
}

entity Value{
	currencySold String,
    amountEGP BigDecimal,
    amountSold BigDecimal,
    currencyExchangeRate BigDecimal
    
}

entity Discount{
	rate BigDecimal,
    amount BigDecimal
}

entity TaxableItem{
	taxType String,
    amount BigDecimal,
    subType String,
    rate BigDecimal
}

entity TaxTotal{
	taxType String,
    amount BigDecimal
}

entity Signature{
	type String,
    value String
}

relationship OneToOne {
	Issuer to IssuerAddress{address}
    Document to Issuer{issuer},
    Document to Receiver{receiver},
    Document to Payment{payment},
    Document to Delivery{delivery},
    Receiver to ReceiverAddress{address},
    InvoiceLine to Value{unitValue},
    InvoiceLine to Discount{discount}
    
}

relationship OneToMany {
	DocumentType to DocumentTypeVersion{documentTypeVersions},
    DocumentTypeVersion to WorkflowParameters{workflowParameters},
    Document to InvoiceLine{invoiceLines},
    Document to TaxTotals{taxTotals},
    Document to Signature{signatures},
    InvoiceLine to TaxableItem{taxableItems},
    Document to TaxTotal{taxTotals}
}


// Set pagination options
paginate JobHistory, Employee with infinite-scroll
paginate Job with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
